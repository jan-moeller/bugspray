//
// MIT License
//
// Copyright (c) 2022 Jan MÃ¶ller
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

//
// THIS FILE IS GENERATED - DO NOT TOUCH
//

#ifndef BUGSPRAY_VERSION_HPP
#define BUGSPRAY_VERSION_HPP

#include <ostream>
#include <string_view>

#include <cstdint>

namespace bs
{
struct version_info
{
    std::uint8_t     major;
    std::uint8_t     minor;
    std::uint8_t     patch;
    std::string_view commit;
};
inline auto operator<<(std::ostream& os, version_info const& version) -> std::ostream&
{
    os << (int)version.major << '.' << (int)version.minor << '.' << (int)version.patch << " (" << version.commit << ')';
    return os;
}

constexpr version_info release_version{
    .major  = @BUGSPRAY_VERSION_MAJOR@,
    .minor  = @BUGSPRAY_VERSION_MINOR@,
    .patch  = @BUGSPRAY_VERSION_PATCH@,
    .commit = "@BUGSPRAY_VERSION_COMMIT@",
};
} // namespace bs

#endif // BUGSPRAY_VERSION_HPP
